MEMBERS
- Marco Cella        10578855
- Giacomo Delcaro    10560602
- Alessandro Colombo 10573335


FILES
- bags:
    - bag1.bag
    - bag2.bag
    - bag3.bag

- cfg:
    - parameters.cfg -> file for the dynamic reconfigure

- launch:
    - scout_launch.launch -> launch file, launches only the two main nodes 
                             velpubsub and odompubsub and the paramaters needed

- msg:
    - OdomInt.msg -> contains the custom message to publish odometry and integration method

- srv:
    - resetOdom.srv -> contains the types of the request and response variables used by the
                       server-client structure to set or reset the pose of the robot

- src: 
    - velpubsub.cpp  -> the node that subscribes to the rpm topics and publishes a 
                       twist message containing all of the robot's speeds
                       
    - odompubsub.cpp -> the node that subscribes to the topic advertised by velpubsub
                        and publishes the complete odometry and the custom message

    - resetodomServer.cpp -> the server for the set/reset service. It receives the 
                             desired new pose x, y, theta[rad] and returns the new odometry

    - clientodomServer.cpp -> the client for the set/reset service. When called, the user can either 
                              pass no arguments to reset the odometry to 0,0,0 or choose x, y and theta [rad]
                              in order to set the odometry to a new one based on these parameters

- scout_rviz.rviz -> rviz configuration to visualize the computed odometry vs the ground truth


ROS PARAMETERS
- x_init:     initial x position in the odom frame
- y_init:     initial y position in the odom frame
- theta_init: initial yaw angle wrt the odom frame

TF TREE:
- odom
    - base_link


CUSTOME MESSAGE
- nav_msgs/Odometry odo
- std_msgs/String   int_method


HOW TO RUN EVERYTHING
I - catkin_make in the catkin workspace root
II- source catkin_ws/devel/setup.bash
1 - roslaunch project1 scout_launch.launch
2 - rosbag play -l bag1.bag 
    NB: for this second step you must cd to the folder where the bag files are --/src/bags
It is now possible to echo the data from the different topics 

If you want to visualize the movement on rviz:
1 - Launch as before
2 - Now open rviz with the scout_rviz.rviz configuration
3 - Play the bag 

For the dynamic reconfigure:
 while the nodes are running, type in the bash:
 rosrun dynamic_reconfigure dynparam set /odompubsub intmethod value
 "Value" can be either 0 for euler integration or 1 for runge - kutta


For the client - server:
1 - Run the server: rosrun project1 reset_odom_server
2 - Run the client: 
    - To reset the odometry to 0, 0, 0: rosrun project1 reset_odom_client
    - To set the odometry to x, y, theta: rosrun project1 reset_odom_client x y theta
    NB: Theta must be in radians



Mettere come abbiamo messo i parametri : TODO
gt_pose: capire TODO






